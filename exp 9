#include <iostream>
using namespace std;

class arr_queue
{
public:
    int queue[100], n = 100, front = - 1, rear = - 1;
    void Insert()
    {
       int val;
       if (rear == n - 1)
       cout<<"Queue Full"<<endl;
       else
        {
          if (front == - 1)
          front = 0;
          cout<<"Insert element in queue: "<<endl;
          cin>>val;
          rear++;
          queue[rear] = val;
        }
    }

    void Delete()
    {
       if (front == - 1 || front > rear)
        {
          cout<<"Queue Empty ";
          return ;
        }
       else
        {
          cout<<"Element deleted from queue is: "<< queue[front] <<endl;
          front++;;
        }
    }

    void Display()
    {
       if (front == - 1)
       cout<<"Queue is empty"<<endl;
       else
        {
          cout<<"Queue: ";
          for (int i = front; i <= rear; i++)
          cout<<queue[i]<<" ";
          cout<<endl;
        }
    }
    void get_front()
    {
       if (front == - 1)
       cout<<"Queue is empty"<<endl;
       else
        {
          cout<<"Front element in Queue is: " << queue[front]<<endl;
          
        }
    }
    void get_rear()
    {
       if (front == - 1)
       cout<<"Queue is empty"<<endl;
       else
        {
          cout<<"rear element in Queue is: " << queue[rear]<<endl;
        }
    }
};

int main()
{
    arr_queue q1;
    int ch;
    cout<<"QUEUE USING ARRAY"<<endl;
    cout<<"1) Insert element to queue"<<endl;
    cout<<"2) Delete element from queue"<<endl;
    cout<<"3) Display all the elements of queue"<<endl;
    cout<<"4) Display front element of queue"<<endl;
    cout<<"5) Display rear elements of queue"<<endl;
    cout<<"6) Exit"<<endl;
    do
    {
       cout<<"Enter your choice: ";
       cin>>ch;
       switch(ch)
       {
          case 1:
              {
                  q1.Insert();
                  break;
              }
          case 2:
              {
                  q1.Delete();
                  break;
              }
          case 3:
              {
                  q1.Display();
                  break;
              }
            case 4:
              {
                  q1.get_front();
                  break;
              }
              case 5:
              {
                  q1.get_rear();
                  break;
              }
          case 6: break;
          default: cout<<"Invalid choice"<<endl;
      }
    } while(ch!=6);
   return 0;
}
