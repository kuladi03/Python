#include<iostream>
using namespace std;

class matrix
{
    public:
    int i,j;
    int a[3][3];

    void accept(int , int);
    void display(int , int);
    void transpose(int , int);
    void add(int , int);
    void upper(int , int);
};

void matrix::accept(int r, int c)

{
    cout<<"Matrix 1 :"<<endl;
    for(i=1;i<=r;i++)
    {
        cout<<"Enter row "<<i<<":"<<endl;
        for(j=1;j<=c;j++)
        {
            cout<<"Enter Column "<<i<<" element "<<j<<" = ";
            cin>>a[i][j];
        }
    }
}

void matrix::display(int r, int c)
{
    cout<<"Matrix 1 = "<<endl;
    for(i=1;i<=r;i++)
    {
        for(j=1;j<=c;j++)
        {
            cout<<" "<<a[i][j]<<" ";
        }
        cout<<endl;
    }
}

void matrix::transpose(int r, int c)
{
    cout<<"The transpose of matrix is : \n";
    if(r==c)
    {
        for(int i=1;i<=r;i++)
        {
            for(int j=1;j<=c;j++)
            {
                cout<<" "<<a[j][i]<<" ";
            }
            cout<<endl;
        }
    }
}

void matrix::add(int r, int c)
{
    int sum=0;
    for(i=1;i<=r;i++)
    {
        for(int j=1;j<=c;j++)
        {
            if(i==j)
            {
                sum+=a[i][j];
            }
        }
    }
    cout<<"The trace of matrix is : \n"<<sum<<endl;
}

void matrix::upper(int r,int c)
{
   {
        bool check= true;

        for(int i=0;i<rows;i++)
        {
            for(int k=0;k<cols;k++)
            {
                if((mat[i][k] != 0)  && (i>k))
                check=false;
            }

        }


        if(check == true)
        {
            cout << "\nGiven triangle is Upper Triangular Matrix."<< endl;
        }
        else
        cout << "\nGiven triangle is not upper triangualr matrix" << endl;
    }
    
}

int main()
{
    matrix m;
    int r,c;
    cout<<"Enter the value of row : ";
    cin>>r;
    cout<<"Enter the value of column : ";
    cin>>c;
    m.accept(r,c);
    m.display(r,c);
    m.transpose(r,c);
    m.add(r,c);
    m.upper(r,c);

    return 0;
}
